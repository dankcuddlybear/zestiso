#!/bin/bash
ARCHISO_PROFILE="$1"
[ -z "$1" ] && ARCHISO_PROFILE="zestiso-kde"
MEM_MB_SIZE=$(free -m | grep "Mem:" | xargs | cut -d ' ' -f 2)
if [ $MEM_MB_SIZE -ge 20480 ]; then
	ARCHISO_WORK_DIR="/tmp/archiso-tmp"
else ARCHISO_WORK_DIR="work"; fi
SETUP_SCRIPT="$ARCHISO_PROFILE/airootfs/etc/calamares/select-software.sh"; mkdir -p "$ARCHISO_PROFILE/airootfs/etc/calamares"

## Generate software selection script
PkgDesc() {
	## Get custom package description, otherwise fetch from Pacman database
	case $1 in
		gparted) echo "Disk partition editor";;
		libreoffice-fresh) echo "Free and powerful office suite with new features and program enhancements";;
		libreoffice-still) echo "Free and powerful office suite - maintenance branch";;
		nano) echo "Command-line text editor";;
		testdisk) echo "Testdisk+Photorec: Data/photo recovery tool";;
		vlc) echo "Multimedia player supporting a wide variety of multimedia formats and streams";;
		discover) echo "KDE Plasma software download centre";;
		dolphin-plugins) echo "Extra plugins for Dolphin KDE file manager";;
		kcolorchooser) echo "Colour picker";;
		kdepim-addons) echo "Addons for KDE PIM applications (email, calendar, contacts, etc.)";;
		kdeplasma-addons) echo "Extra addons for KDE Plasma desktop";;
		kgpg) echo "GPG key manager";;
		octopi) echo "Advanced software centre with AUR (Arch User Repository) support";;
		*) pacman -Ss ^$1$ | grep -v "/$1" -m 1 | xargs;;
	esac
}
sudo rm -f "$SETUP_SCRIPT"
echo "Generating software selection script, please wait..."
echo '#!/bin/bash' >> "$SETUP_SCRIPT"
echo "PKG_SELECTION=\"\$(echo \"\$(kdialog --checklist \"Select extra software (default: everything)\nClick to select (highlighted) or deselect (not highlighted)\" \\" >> "$SETUP_SCRIPT"
IGNORE=0; OPT_PKG=""; while IFS= read -r LINE; do
	LINE="$(echo "$LINE" | xargs)"
	if [ -z "$LINE" ]; then IGNORE=0
	elif [ "$(echo $LINE | cut -c 1-2)" == "##" ]; then
		if (echo $LINE | grep -i 'Linux' &> /dev/null) || \
		(echo $LINE | grep -i 'kernel' &> /dev/null) || \
		(echo $LINE | grep -i 'headers' &> /dev/null) || \
		(echo $LINE | grep -i 'defaults' &> /dev/null) || \
		(echo $LINE | grep -i 'GPU' &> /dev/null) || \
		(echo $LINE | grep -i 'drivers' &> /dev/null) || \
		(echo $LINE | grep -i 'Pipewire' &> /dev/null) || \
		(echo $LINE | grep -i 'desktop environment' &> /dev/null) || \
		(echo $LINE | grep -i 'Compilers' &> /dev/null) || \
		(echo $LINE | grep -i 'repositories' &> /dev/null) || \
		(echo $LINE | grep -i 'DO NOT EDIT' &> /dev/null) || \
		(echo $LINE | grep -i 'DO NOT REMOVE' &> /dev/null) || \
		(echo $LINE | grep -i 'Installer' &> /dev/null)
		then IGNORE=1; else
			IGNORE=0
			if (echo "$LINE" | grep -i 'Add your packages here' &> /dev/null); then echo "- \"[ Extra software ]\" off \\" >> "$SETUP_SCRIPT"
			elif (echo "$LINE" | grep -i 'Additional functionality' &> /dev/null); then echo "- \"[ Additional functionality ]\" off \\" >> "$SETUP_SCRIPT"
			elif (echo "$LINE" | grep -i 'KDE applications' &> /dev/null); then echo "- \"[ KDE applications ]\" off \\" >> "$SETUP_SCRIPT"
			elif (echo "$LINE" | grep -i 'KDE games' &> /dev/null); then echo "- \"[ KDE games ]\" off \\" >> "$SETUP_SCRIPT"
			elif (echo "$LINE" | grep -i 'themes' &> /dev/null); then echo "- \"[ Themes and wallpapers ]\" off \\" >> "$SETUP_SCRIPT"
			else echo "- \"[ Other ]\" off \\" >> "$SETUP_SCRIPT"; fi
		fi
	else
		if [ "$IGNORE" == 0 ]; then
		# Check for important packages
			if [ ! -z "$LINE" ] && ( \
			[ "$(echo "$LINE" | cut -c 1-5)" != "linux" ] && \
			[ "$LINE" != "bash" ] && \
			[ "$LINE" != "iptables" ] && \
			[ "$LINE" != "iptables-nft" ] && \
			[ "$(echo "$LINE" | cut -c 1-9)" != "lib32-sdl" ] && \
			[ "$LINE" != "libglvnd" ] && \
			[ "$LINE" != "noto-fonts" ] && \
			[ "$LINE" != "ntfs-3g" ] && \
			[ "$(echo "$LINE" | cut -c 1-14)" != "qt6-multimedia" ] && \
			[ "$(echo "$LINE" | cut -c 1-10)" != "phonon-qt6" ] && \
			[ "$LINE" != "grub" ] && \
			[ "$LINE" != "os-prober" ] && \
			[ "$LINE" != "lib32-pipewire-jack" ] && \
			[ "$(echo "$LINE" | cut -c 1-8)" != "pipewire" ] && \
			[ "$LINE" != "wireplumber" ] && \
			[ "$LINE" != "bundle-kde" ] && \
			[ "$LINE" != "bundle-desktop" ] && \
			[ "$LINE" != "bundle-amd-gpu" ] && \
			[ "$LINE" != "bundle-intel-gpu" ] && \
			[ "$LINE" != "bundle-nvidia-foss" ] && \
			[ "$LINE" != "ark" ] && \
			[ "$LINE" != "dolphin" ] && \
			[ "$LINE" != "gwenview" ] && \
			[ "$LINE" != "kate" ] && \
			[ "$LINE" != "kcalc" ] && \
			[ "$LINE" != "khelpcenter" ] && \
			[ "$LINE" != "konsole" ] && \
			[ "$LINE" != "kwalletmanager" ] && \
			[ "$LINE" != "packagekit-qt6" ] && \
			[ "$LINE" != "plasma-systemmonitor" ] && \
			[ "$LINE" != "spectacle" ] && \
			[ "$LINE" != "plymouth-theme-zestiso-breeze" ] && \
			[ "$LINE" != "base-devel" ] && \
			[ "$LINE" != "chaotic-keyring" ] && \
			[ "$LINE" != "chaotic-mirrorlist" ] && \
			[ "$LINE" != "git" ] && \
			[ "$LINE" != "yay" ] && \
			[ "$LINE" != "alci-calamares" ] && \
			[ "$LINE" != "arch-install-scripts" ] && \
			[ "$LINE" != "mkinitcpio-archiso" ] && \
			[ "$LINE" != "pv" ] && \
			[ "$LINE" != "syslinux" ] && \
			[ "$LINE" != "zestiso-archiso-files" ] && \
			[ "$LINE" != "amd-ucode" ] && \
			[ "$LINE" != "base" ] && \
			[ "$LINE" != "efibootmgr" ] && \
			[ "$LINE" != "intel-ucode" ] && \
			[ "$LINE" != "sudo" ] && \
			[ "$LINE" != "terminus-font" ] && \
			(! (echo "$LINE" | grep "#" &> /dev/null))) then
				echo "$LINE \"  $LINE: "$(PkgDesc "$LINE")"\" on \\" >> "$SETUP_SCRIPT"
				OPT_PKG="$OPT_PKG $LINE"
			fi
		fi
	fi
done < "$ARCHISO_PROFILE/packages.x86_64"
echo ")\" | sed 's/\"//g')\"" >> "$SETUP_SCRIPT"
OPT_PKG="$(echo "$OPT_PKG" | xargs)"
echo "OPT_PKG=\"$OPT_PKG\"" >> "$SETUP_SCRIPT"
echo "UNINSTALL_PKG=\"\"; for PKG in \$OPT_PKG; do" >> "$SETUP_SCRIPT"
echo "[[ \" \$PKG_SELECTION \" != *\" \$PKG \"* ]] && UNINSTALL_PKG=\"\$UNINSTALL_PKG \$PKG\"" >> "$SETUP_SCRIPT"
echo "done" >> "$SETUP_SCRIPT"
echo "if [ ! -z \"\$UNINSTALL_PKG\" ]; then" >> "$SETUP_SCRIPT"
echo "echo \"The following packages have been de-selected and will now be uninstalled.\"" >> "$SETUP_SCRIPT"
echo "echo \"After that, you will have to re-install them manually should you need them in the future:\"" >> "$SETUP_SCRIPT"
echo "echo \"\$UNINSTALL_PKG\"" >> "$SETUP_SCRIPT"
echo "pacman --noconfirm -Rus \$UNINSTALL_PKG" >> "$SETUP_SCRIPT"
echo "fi" >> "$SETUP_SCRIPT"

chmod +x "$SETUP_SCRIPT"
echo "The following optional software packages will be available:"; echo "$OPT_PKG"

echo "Cleaning up..."
sudo rm -rf out
sudo mkarchiso -v -w "$ARCHISO_WORK_DIR" "$ARCHISO_PROFILE" && sync && \
sudo chown -R $(whoami):$(whoami) out && cd out && \
mkdir -p ../../zestiso-iso && mv *.iso ../../zestiso-iso && \
cd ../ && echo "Cleaning up..." && sudo rm -rf out /tmp/archiso-tmp
sync
