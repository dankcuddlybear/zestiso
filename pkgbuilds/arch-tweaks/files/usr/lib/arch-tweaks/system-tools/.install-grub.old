#!/bin/sh
## Check boot mode
if [ -f /sys/firmware/efi/fw_platform_size ]; then
   [ "$(cat /sys/firmware/efi/fw_platform_size)" == 32 ] && \
   BOOT_MODE="i386-efi" || BOOT_MODE="x86_64-efi"
else BOOT_MODE="i386-pc"; fi

InstallGrub() {
   if [ "$BOOT_MODE" == "i386-pc" ]; then ## BIOS install
      ## Get boot partition - if not found, use root partition instead
      BOOT_DEV="$(mount | grep "on /boot" | cut -d ' ' -f 1)"
      [ -z "$BOOT_DEV" ] && BOOT_DEV="$(mount | grep "on / " | cut -d ' ' -f 1)"
      #
      ## Use name of boot partition to find boot disk
      if [ ${BOOT_DEV:5:2} == hd ] || [ ${BOOT_DEV:5:2} == sd ] || [ ${BOOT_DEV:5:2} == vd ]; then
         BOOT_DISK="$(echo "$BOOT_DEV" | sed 's/[0-9]//g')"
      elif [ ${BOOT_DEV:5:4} == nvme ] || [ ${BOOT_DEV:5:6} == mmcblk ]; then
         BOOT_DISK="$(echo "$BOOT_DEV" | cut -d 'p' -f 1)"
      else
         ## Get all physical volumes that make up root filesystem
         SYS_PVS=$(lsblk -Pno PKNAME,FSROOTS | grep "FSROOTS=\"/\"" | cut -d '"' -f 2 | xargs)
         [ -z "$SYS_PVS" ] && echo "[ERROR] Could not find any physical volumes for root filesystem" && exit 1
         ## Find disks containing physical volumes that make up root filesystem
         SYS_DISKS=""; for PV in $SYS_PVS; do
            SYS_DISKS="$SYS_DISKS $(lsblk "/dev/$PV" -no PKNAME | grep -m 1 "")"
         done
         [ -z "$SYS_DISKS" ] && echo "[ERROR] Could not find any free disks" && exit 1
         ## Exclude disks with Windows installed.


         echo "[ERROR] $BOOT_DEV is on an unsupported media type!"
         echo "Please set /boot partition in /etc/fstab to a partition on a HDD or flash storage."
         exit 1
      fi
      ## Testing
      echo "BOOT_DEV=$BOOT_DEV"
      echo "BOOT_DISK=$BOOT_DISK"
      echo "SYS_PVS=$SYS_PVS"
      echo "SYS_DISKS=$SYS_DISKS"

      ## Install GRUB to MBR of Linux boot disk
      #grub-install --target=i386-pc "$BOOT_DISK"
   else ## UEFI install
      # Find EFI directory
      sleep 0
   fi
}

## Testing
BOOT_MODE="i386-pc"; InstallGrub; exit



## BIOS
## Prerequisites: Boot disk





## Get boot partition (if not found, BOOT_DEV is unset)
unset BOOT_DEV; BOOT_DEV="$(mount | grep "on /boot" | cut -d ' ' -f 1)"

## Get root partition
unset ROOT_DEV; ROOT_DEV="$(mount | grep "on / " | cut -d ' ' -f 1)"
[ -z "$ROOT_DEV" ] && echo "[ERROR] Root partition not found!" && exit 1






[ BIOS ]
1) FIND BOOT DISK
   Install to the disk containing boot files (can either be on root or boot partition)

## UEFI
## Prerequisites: ESP mount point




#
#
#
#
#
# ## Get boot partition (if not found, BOOT_DEV is unset)
# unset BOOT_DEV; BOOT_DEV="$(mount | grep "on /boot" | cut -d ' ' -f 1)"
#
# ## Get root partition
# unset ROOT_DEV; ROOT_DEV="$(mount | grep "on / " | cut -d ' ' -f 1)"
# [ -z "$ROOT_DEV" ] && echo "[ERROR] Root partition not found!" && exit 1
#
#
#
#
#
#
# [ BIOS ]
# 1) FIND BOOT DISK
#    Install to the disk containing boot files (can either be on root or boot partition)
